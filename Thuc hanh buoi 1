--------------------------------------------------
BT1: 
#include<stdio.h>
#include<stdlib.h>
int main(){
	int x, y, z;
	int *ptr;
	
	printf("Trinh Minh Hieu - 20204554 - 715026\n");
	
	printf("Enter three integers: ");
	scanf("%d %d %d", &x, &y, &z);
	printf("\nThe three integers are:\n");
	ptr = &x;
	printf("x = %d\n", *ptr);
	
	ptr = &y;         // con tro tro toi dia chi cua y;
	printf("y = %d\n", *ptr);    // in ra gia tri cua y
	
	ptr = &z;        // con tro tro toi z;
	printf("z = %d\n", *ptr);     // in ra gia tri cua z
	
	return 0;
}

-----------------------------------------------
BT2:
#include <stdio.h>
int main(){
	printf("Trinh Minh Hieu - 20204554 - 715026\n");
    int a[7]= {13, -355, 235, 47, 67, 943, 1222}; 
    printf("address of first five elements in memory.\n");
    for (int i=0; i<5;i++)  printf("\ta[%d] ",i);
    printf("\n");
    
    for (int i = 0; i < 5;i++) printf("\t%p", &a[i]); //in ra dia chi 5 phan tu dau tien trong mang
    printf("\n");   // in cach dong
           
    return 0;
}
---------------------------------------------------------
BT3:
#include <stdio.h>
int main()
{
	printf("Trinh Minh Hieu - 20204554 - 715026\n");
    int x, y, z;
    int *ptr;
    scanf("%d %d %d", &x, &y, &z);
    printf("Here are the values of x, y, and z:\n");
    printf("%d %d %d\n", x, y, z);

 
    ptr = &x;			// con tro tro den bien x
    *ptr = *ptr + 100;   //gia tri cua x tang len 100
    
    ptr = &y;   // con tro tro den bien y
    *ptr = *ptr + 100;		// tang gia tri cua y len 100
    	
    ptr = &z;     //con tro tro den bien z
    *ptr = *ptr + 100;			//tang gia tri cua z len 100
  
    
    printf("Once again, here are the values of x, y, and z:\n");
    printf("%d %d %d\n", x, y, z);
    return 0;
}    
----------------------------------------------
BT4:
int counteven(int* arr, int size){
    int count = 0;
    
    
    // duyet tung phan tu cua mang,neu phan tu nao chia het cho 2 thi count tang len 1 don vi
   for( int i = 0; i < size;i++) if(arr[i] % 2 == 0) count++; 
    
    return count;    
}
-----------------------------------
BT5:
double* maximum(double* a, int size){
    double *max;
    max = a;
    if (a==NULL) return NULL;

   for(int i = 0; i < size;i++) if (*max < *(max+i)) *max =*(max + i);
    
    return max;
}
--------------------------------------
BT6:

void reversearray(int arr[], int size){
    int l = 0, r = size - 1, tmp;
    
    while(l <= r)
    {
    	tmp = arr[l];
    	arr[l] = arr[r];
    	arr[r] = tmp;
    	l++;
    	r--;
	}
}

void ptr_reversearray(int *arr, int size){
    int l = 0, r = size - 1, tmp;
    
       while(l <= r)
    {
    	tmp = arr[l];
    	arr[l] = arr[r];
    	arr[r] = tmp;
    	l++;
    	r--;
	}
}
-----------------------------------------
BT7:



